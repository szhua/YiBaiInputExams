package com.yibaieducation.bean;

import com.yibaieducation.dao.DaoSession;
import de.greenrobot.dao.DaoException;

import com.yibaieducation.dao.Ti_titleDao;

import java.io.Serializable;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table TI_TITLE.
 */
public class Ti_title implements Serializable {

    private Long id;
    private Integer type_code;
    private String des;
    private String itemA;
    private String itemB;
    private String itemC;
    private String itemD;
    private Float score;
    private String answer;
    private String analyze_text;
    private String parent_id;
    private Integer paper_id;
    private Integer status;
    private String create_time;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient Ti_titleDao myDao;


    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public Ti_title() {
    }

    public Ti_title(Long id) {
        this.id = id;
    }

    public Ti_title(Long id, Integer type_code, String des, String itemA, String itemB, String itemC, String itemD, Float score, String answer, String analyze_text, String parent_id, Integer paper_id, Integer status, String create_time) {
        this.id = id;
        this.type_code = type_code;
        this.des = des;
        this.itemA = itemA;
        this.itemB = itemB;
        this.itemC = itemC;
        this.itemD = itemD;
        this.score = score;
        this.answer = answer;
        this.analyze_text = analyze_text;
        this.parent_id = parent_id;
        this.paper_id = paper_id;
        this.status = status;
        this.create_time = create_time;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getTi_titleDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Integer getType_code() {
        return type_code;
    }

    public void setType_code(Integer type_code) {
        this.type_code = type_code;
    }

    public String getDes() {
        return des;
    }

    public void setDes(String des) {
        this.des = des;
    }

    public String getItemA() {
        return itemA;
    }

    public void setItemA(String itemA) {
        this.itemA = itemA;
    }

    public String getItemB() {
        return itemB;
    }

    public void setItemB(String itemB) {
        this.itemB = itemB;
    }

    public String getItemC() {
        return itemC;
    }

    public void setItemC(String itemC) {
        this.itemC = itemC;
    }

    public String getItemD() {
        return itemD;
    }

    public void setItemD(String itemD) {
        this.itemD = itemD;
    }

    public Float getScore() {
        return score;
    }

    public void setScore(Float score) {
        this.score = score;
    }

    public String getAnswer() {
        return answer;
    }

    public void setAnswer(String answer) {
        this.answer = answer;
    }

    public String getAnalyze_text() {
        return analyze_text;
    }

    public void setAnalyze_text(String analyze_text) {
        this.analyze_text = analyze_text;
    }

    public String getParent_id() {
        return parent_id;
    }

    public void setParent_id(String parent_id) {
        this.parent_id = parent_id;
    }

    public Integer getPaper_id() {
        return paper_id;
    }

    public void setPaper_id(Integer paper_id) {
        this.paper_id = paper_id;
    }

    public Integer getStatus() {
        return status;
    }

    public void setStatus(Integer status) {
        this.status = status;
    }

    public String getCreate_time() {
        return create_time;
    }

    public void setCreate_time(String create_time) {
        this.create_time = create_time;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END


    @Override
    public String toString() {
        return this.answer+"\n";
    }
}
