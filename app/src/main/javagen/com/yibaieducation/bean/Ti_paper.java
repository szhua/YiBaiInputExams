package com.yibaieducation.bean;

import com.yibaieducation.dao.DaoSession;
import de.greenrobot.dao.DaoException;

import com.yibaieducation.dao.Ti_paperDao;

import java.io.Serializable;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table TI_PAPER.
 */
public class Ti_paper  implements Serializable{

    private Long id;
    private String name;
    private Integer type;
    private Integer sku_code;
    private Integer subject_code;
    private Integer status;
    private String update_time;
    private String total_count;
    private String answer_date;
    private String total_score;
    private String start_time;
    private String answer_time;
    private Integer paper_order;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient Ti_paperDao myDao;


    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public Ti_paper() {
    }

    public Ti_paper(Long id) {
        this.id = id;
    }

    public Ti_paper(Long id, String name, Integer type, Integer sku_code, Integer subject_code, Integer status, String update_time, String total_count, String answer_date, String total_score, String start_time, String answer_time, Integer paper_order) {
        this.id = id;
        this.name = name;
        this.type = type;
        this.sku_code = sku_code;
        this.subject_code = subject_code;
        this.status = status;
        this.update_time = update_time;
        this.total_count = total_count;
        this.answer_date = answer_date;
        this.total_score = total_score;
        this.start_time = start_time;
        this.answer_time = answer_time;
        this.paper_order = paper_order;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getTi_paperDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getType() {
        return type;
    }

    public void setType(Integer type) {
        this.type = type;
    }

    public Integer getSku_code() {
        return sku_code;
    }

    public void setSku_code(Integer sku_code) {
        this.sku_code = sku_code;
    }

    public Integer getSubject_code() {
        return subject_code;
    }

    public void setSubject_code(Integer subject_code) {
        this.subject_code = subject_code;
    }

    public Integer getStatus() {
        return status;
    }

    public void setStatus(Integer status) {
        this.status = status;
    }

    public String getUpdate_time() {
        return update_time;
    }

    public void setUpdate_time(String update_time) {
        this.update_time = update_time;
    }

    public String getTotal_count() {
        return total_count;
    }

    public void setTotal_count(String total_count) {
        this.total_count = total_count;
    }

    public String getAnswer_date() {
        return answer_date;
    }

    public void setAnswer_date(String answer_date) {
        this.answer_date = answer_date;
    }

    public String getTotal_score() {
        return total_score;
    }

    public void setTotal_score(String total_score) {
        this.total_score = total_score;
    }

    public String getStart_time() {
        return start_time;
    }

    public void setStart_time(String start_time) {
        this.start_time = start_time;
    }

    public String getAnswer_time() {
        return answer_time;
    }

    public void setAnswer_time(String answer_time) {
        this.answer_time = answer_time;
    }

    public Integer getPaper_order() {
        return paper_order;
    }

    public void setPaper_order(Integer paper_order) {
        this.paper_order = paper_order;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
