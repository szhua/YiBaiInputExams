package com.yibaieducation.dao;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.identityscope.IdentityScopeType;

import com.yibaieducation.dao.Ti_paperDao;
import com.yibaieducation.dao.Ti_titleDao;
import com.yibaieducation.dao.Ti_title_parentDao;
import com.yibaieducation.dao.Ti_itemDao;
import com.yibaieducation.dao.Ti_item_configDao;
import com.yibaieducation.dao.Ti_sku_subjectDao;
import com.yibaieducation.dao.Ti_account_typesDao;
import com.yibaieducation.dao.Ti_account_subsDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * Master of DAO (schema version 1): knows all DAOs.
*/
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 1;

    /** Creates underlying database table using DAOs. */
    public static void createAllTables(SQLiteDatabase db, boolean ifNotExists) {
        Ti_paperDao.createTable(db, ifNotExists);
        Ti_titleDao.createTable(db, ifNotExists);
        Ti_title_parentDao.createTable(db, ifNotExists);
        Ti_itemDao.createTable(db, ifNotExists);
        Ti_item_configDao.createTable(db, ifNotExists);
        Ti_sku_subjectDao.createTable(db, ifNotExists);
        Ti_account_typesDao.createTable(db, ifNotExists);
        Ti_account_subsDao.createTable(db, ifNotExists);
    }
    
    /** Drops underlying database table using DAOs. */
    public static void dropAllTables(SQLiteDatabase db, boolean ifExists) {
        Ti_paperDao.dropTable(db, ifExists);
        Ti_titleDao.dropTable(db, ifExists);
        Ti_title_parentDao.dropTable(db, ifExists);
        Ti_itemDao.dropTable(db, ifExists);
        Ti_item_configDao.dropTable(db, ifExists);
        Ti_sku_subjectDao.dropTable(db, ifExists);
        Ti_account_typesDao.dropTable(db, ifExists);
        Ti_account_subsDao.dropTable(db, ifExists);
    }
    
    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }
    
    /** WARNING: Drops all table on Upgrade! Use only during development. */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            dropAllTables(db, true);
            onCreate(db);
        }
    }

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(Ti_paperDao.class);
        registerDaoClass(Ti_titleDao.class);
        registerDaoClass(Ti_title_parentDao.class);
        registerDaoClass(Ti_itemDao.class);
        registerDaoClass(Ti_item_configDao.class);
        registerDaoClass(Ti_sku_subjectDao.class);
        registerDaoClass(Ti_account_typesDao.class);
        registerDaoClass(Ti_account_subsDao.class);
    }
    
    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }
    
    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }
    
}
